robot_radius: 0.17 # circle-like shape

obstacle_range: 2.5 # to detect the obstacle(if enter within 3m,it will use the cost map)
raytrace_range: 3.5 #  to clear the obstacle (clear the obstacle out of 3.5m)

inflation_radius: 0.6 # pengzhang index (it's same  in UAV)
cost_scaling_factor: 5.0 # cost rate(more higher,value lower)

map_type: costmap  # type of map
observation_sources: scan # the sensor of navigation

 # set the sensor params. and ax. And use to add the obstacle by .the lidar and clear the obstacle by kinect
scan: {sensor_frame: laser_link,data_type: LaserScan, topic: /scan, marking: true, clearing: true}